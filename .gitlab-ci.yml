# .gitlab-ci.yml

stages:
#  - sonar
  - build
#  - test
  - deploy
#  - deploy_test
  - cleanup

variables:
  APP: $CI_COMMIT_SHORT_SHA
  PROGECT: dev

build:
  stage: build
  tags:
    - shell-dev
  before_script:
    - echo "$AND_DOCKER_REGISTRY_RW_PASS" | docker login -u "${AND_REGISTRY_USER_RW}" "$AND_DOCKER_REGISTRY_NAME" --password-stdin
  script:
    - docker build --tag $AND_DOCKER_REGISTRY_NAME/$PROJECT-$APP:$CI_COMMIT_SHA -f ./Dockerfile --build-arg BUILDKIT_INLINE_CACHE=1 .
    - docker push $AND_DOCKER_REGISTRY_NAME/$PROJECT-$APP:$CI_COMMIT_SHA
  only:
    - main
    - merge_requests

deploy:
  stage: deploy
  tags:
    - shell-dev
  before_script:
    - echo "$AND_DOCKER_REGISTRY_RW_PASS" | docker login -u "${AND_REGISTRY_USER_RW}" "$AND_DOCKER_REGISTRY_NAME" --password-stdin
  script:
    - |
      docker stop $CI_PROJECT_NAME || true
      docker rm $CI_PROJECT_NAME || true
      docker stop $AND_DOCKER_REGISTRY_NAME/$PROGECT-$APP:$CI_COMMIT_SHA || true
      docker rm $AND_DOCKER_REGISTRY_NAME/$PROGECT-$APP:$CI_COMMIT_SHA || true
      docker rmi -f $AND_DOCKER_REGISTRY_NAME/$PROGECT-$APP:$CI_COMMIT_SHA || true
      docker-compose -f docker-compose.yaml pull
      docker-compose -f docker-compose.yaml up --force-recreate -d
      docker system prune -f --filter "label!=keep"
      docker image prune -a -f
  only:
    - main

cleanup:
  stage: cleanup
  tags:
    - shell-dev
  script:
    - docker system prune -f
    - docker image prune -a -f
  when: always
  only:
    - main
    - merge_requests
